// SalesMatch Pro - Neomorphic FAB Menu App
class SalesMatchApp {
    constructor() {
        this.currentSection = 'dashboard';
        this.fabMenuOpen = false;
        this.userId = this.generateUserId(); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.profiles = [
            {
                id: 1,
                name: '–û–û–û "–¢–µ—Ö–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏"',
                type: '–ö–æ–º–ø–∞–Ω–∏—è ‚Ä¢ IT Services',
                description: '–ò—â–µ–º –æ–ø—ã—Ç–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö IT-—Ä–µ—à–µ–Ω–∏–π.',
                tags: ['IT', 'B2B', '–ú–æ—Å–∫–≤–∞', '20% –∫–æ–º–∏—Å—Å–∏—è'],
                icon: 'fas fa-building'
            },
            {
                id: 2,
                name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
                type: '–¢–æ—Ä–≥–æ–≤—ã–π –∞–≥–µ–Ω—Ç ‚Ä¢ 5 –ª–µ—Ç –æ–ø—ã—Ç–∞',
                description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø—Ä–æ–¥–∞–∂–∞—Ö –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.',
                tags: ['–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å', '–°–ù–ì', 'B2B', '–û–ø—ã—Ç–Ω—ã–π'],
                icon: 'fas fa-user-tie'
            },
            {
                id: 3,
                name: '–û–û–û "–ú–µ–≥–∞–¢—Ä–µ–π–¥"',
                type: '–ö–æ–º–ø–∞–Ω–∏—è ‚Ä¢ Retail',
                description: '–ö—Ä—É–ø–Ω–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Å–µ—Ç—å –∏—â–µ—Ç —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π.',
                tags: ['Retail', '–§—Ä–∞–Ω—à–∏–∑–∞', '–†–µ–≥–∏–æ–Ω—ã', '15% –∫–æ–º–∏—Å—Å–∏—è'],
                icon: 'fas fa-store'
            }
        ];
        this.currentProfileIndex = 0;
        this.init();
    }
    
    init() {
        this.setupFABMenu();
        this.setupEventListeners();
        this.showSection('dashboard');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.trackEvent('login', {
            source: 'web_app',
            timestamp: new Date().toISOString()
        });
    }
    
    // === –ú–ï–¢–û–î–´ –ê–ù–ê–õ–ò–¢–ò–ö–ò ===
    
    generateUserId() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let userId = localStorage.getItem('demo_user_id');
        if (!userId) {
            userId = Math.floor(Math.random() * 1000) + 1;
            localStorage.setItem('demo_user_id', userId);
        }
        return parseInt(userId);
    }
    
    async trackEvent(eventType, eventData = {}) {
        try {
            const response = await fetch('/api/v1/analytics/track', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    user_id: this.userId,
                    event_type: eventType,
                    event_data: eventData
                })
            });
            
            if (response.ok) {
                console.log(`üìä Event tracked: ${eventType}`);
            }
        } catch (error) {
            console.warn('–û—à–∏–±–∫–∞ —Ç—Ä–µ–∫–∏–Ω–≥–∞:', error);
        }
    }
    
    setupFABMenu() {
        const fabMainBtn = document.getElementById('fabMainBtn');
        const fabMenu = document.getElementById('fabMenu');
        
        if (fabMainBtn) {
            fabMainBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                this.toggleFABMenu();
            });
        }
        
        document.querySelectorAll('.fab-item').forEach(item => {
            item.addEventListener('click', (e) => {
                const section = e.currentTarget.dataset.section;
                if (section) {
                    this.showSection(section);
                    this.closeFABMenu();
                }
            });
        });
        
        document.addEventListener('click', (e) => {
            if (!e.target.closest('.fab-menu') && this.fabMenuOpen) {
                this.closeFABMenu();
            }
        });
    }
    
    toggleFABMenu() {
        if (this.fabMenuOpen) {
            this.closeFABMenu();
        } else {
            this.openFABMenu();
        }
    }
    
    openFABMenu() {
        const fabMenu = document.getElementById('fabMenu');
        const fabMainBtn = document.getElementById('fabMainBtn');
        const icon = fabMainBtn.querySelector('i');
        
        fabMenu.classList.add('open');
        icon.className = 'fas fa-times';
        this.fabMenuOpen = true;
        
        const fabItems = document.querySelectorAll('.fab-item');
        fabItems.forEach((item, index) => {
            setTimeout(() => {
                item.style.transform = 'scale(1) translateX(0)';
                item.style.opacity = '1';
            }, index * 50);
        });
    }
    
    closeFABMenu() {
        const fabMenu = document.getElementById('fabMenu');
        const fabMainBtn = document.getElementById('fabMainBtn');
        const icon = fabMainBtn.querySelector('i');
        
        fabMenu.classList.remove('open');
        icon.className = 'fas fa-bars';
        this.fabMenuOpen = false;
    }
    
    setupEventListeners() {
        document.addEventListener('click', (e) => {
            if (e.target.closest('.card:not([onclick])')) {
                this.addCardPressEffect(e.target.closest('.card'));
            }
        });
        
        // Keyboard shortcuts for navigation
        document.addEventListener('keydown', (e) => {
            if (e.ctrlKey || e.metaKey) {
                switch (e.key) {
                    case '1': e.preventDefault(); this.showSection('dashboard'); break;
                    case '2': e.preventDefault(); this.showSection('swipe'); break;
                    case '3': e.preventDefault(); this.showSection('matches'); break;
                    case '4': e.preventDefault(); this.showSection('messages'); break;
                    case '5': e.preventDefault(); this.showSection('profile'); break;
                    case '6': e.preventDefault(); this.showSection('ai-assistant'); break;
                }
            }
        });
    }
    
    addCardPressEffect(card) {
        card.style.transform = 'translateY(-2px) scale(0.98)';
        card.style.boxShadow = 'var(--shadow-pressed)';
        
        setTimeout(() => {
            card.style.transform = '';
            card.style.boxShadow = '';
        }, 150);
    }
    
    showSection(sectionName) {
        this.currentSection = sectionName;
        const content = this.getSectionContent(sectionName);
        const appContent = document.getElementById('app-content');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–µ–∫—Ü–∏–∏
        this.trackEvent('profile_view', {
            section: sectionName,
            timestamp: new Date().toISOString()
        });
        
        appContent.style.opacity = '0';
        appContent.style.transform = 'translateY(20px)';
        
        setTimeout(() => {
            appContent.innerHTML = content;
            appContent.style.opacity = '1';
            appContent.style.transform = 'translateY(0)';
            this.setupSectionHandlers(sectionName);
        }, 200);
    }
    
    getSectionContent(section) {
        switch (section) {
            case 'dashboard': return this.getDashboardContent();
            case 'swipe': return this.getSwipeContent();
            case 'matches': return this.getMatchesContent();
            case 'messages': return this.getMessagesContent();
            case 'profile': return this.getProfileContent();
            case 'ai-assistant': return this.getAIAssistantContent();
            case 'analytics': return this.getAnalyticsContent();
            default: return '<div class="glass-card"><h2>–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h2></div>';
        }
    }
    
    getDashboardContent() {
        return `
            <div class="cards-grid">
                <div class="card glass-card" onclick="app.showSection('swipe')">
                    <div class="card-icon">üîç</div>
                    <div class="card-title">–ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤</div>
                    <div class="card-description">–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–¥–±–æ—Ä–∞ –±–∏–∑–Ω–µ—Å-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤</div>
                </div>
                
                <div class="card glass-card" onclick="app.showSection('matches')">
                    <div class="card-icon">ü§ù</div>
                    <div class="card-title">–°–æ–≤–ø–∞–¥–µ–Ω–∏—è</div>
                    <div class="card-description">–í–∑–∞–∏–º–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏</div>
                </div>
                
                <div class="card glass-card" onclick="app.showSection('messages')">
                    <div class="card-icon">üí¨</div>
                    <div class="card-title">–°–æ–æ–±—â–µ–Ω–∏—è</div>
                    <div class="card-description">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏</div>
                </div>
                
                <div class="card glass-card" onclick="app.showSection('ai-assistant')">
                    <div class="card-icon">ü§ñ</div>
                    <div class="card-title">AI-–ü–æ–º–æ—â–Ω–∏–∫</div>
                    <div class="card-description">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞</div>
                </div>
                
                <div class="card glass-card" onclick="app.showSection('analytics')">
                    <div class="card-icon">üìä</div>
                    <div class="card-title">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
                    <div class="card-description">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                </div>
                
                <div class="card glass-card" onclick="app.showSection('profile')">
                    <div class="card-icon">‚≠ê</div>
                    <div class="card-title">Premium</div>
                    <div class="card-description">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞</div>
                </div>
            </div>
            
            <div class="text-center mt-30">
                <button class="btn btn-gold btn-lg btn-primary" onclick="app.showSection('swipe')">
                    <i class="fas fa-rocket"></i>
                    –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
                </button>
                <button class="btn btn-glass btn-lg" onclick="app.showSection('analytics')">
                    <i class="fas fa-chart-line"></i>
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                </button>
            </div>
        `;
    }
    
    getSwipeContent() {
        const profile = this.profiles[this.currentProfileIndex] || this.profiles[0];
        return `
            <div class="swipe-container">
                <div class="glass-card">
                    <div class="card-icon" style="font-size: 4rem; margin-bottom: 20px;">
                        <i class="${profile.icon}"></i>
                    </div>
                    <div class="card-title">${profile.name}</div>
                    <div class="card-description" style="margin-bottom: 15px;">${profile.type}</div>
                    <div class="card-description" style="margin-bottom: 20px;">${profile.description}</div>
                    <div class="profile-tags" style="display: flex; flex-wrap: wrap; gap: 8px; justify-content: center;">
                        ${profile.tags.map(tag => `<span style="background: var(--glass-background); padding: 4px 12px; border-radius: 20px; font-size: 0.9rem;">${tag}</span>`).join('')}
                    </div>
                </div>
            </div>
            
            <div class="text-center mt-30">
                <div style="display: flex; gap: 15px; justify-content: center; flex-wrap: wrap;">
                    <button class="btn btn-glass btn-lg" onclick="app.swipeAction('reject')">
                        <i class="fas fa-times"></i> –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                    </button>
                    <button class="btn btn-blue btn-lg" onclick="app.sendMessage(${profile.id}, '${profile.name}')">
                        <i class="fas fa-envelope"></i> –ù–∞–ø–∏—Å–∞—Ç—å
                    </button>
                    <button class="btn btn-gold btn-lg" onclick="app.swipeAction('like')">
                        <i class="fas fa-heart"></i> –ù—Ä–∞–≤–∏—Ç—Å—è
                    </button>
                </div>
                
                <div class="mt-20" style="color: rgba(255,255,255,0.7); font-size: 0.9rem;">
                    üí° –°–æ–≤–µ—Ç: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏–ª–∏ –ª–∞–π–∫ –¥–ª—è –≤–∑–∞–∏–º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞
                </div>
            </div>
        `;
    }
    
    getMatchesContent() {
        return `
            <div class="glass-card text-center">
                <div class="card-icon">ü§ù</div>
                <div class="card-title">–í–∞—à–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è</div>
                <div class="card-description">–í–∑–∞–∏–º–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</div>
                <p style="margin-top: 20px;">–ü–æ–∫–∞ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ª–∏—Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏!</p>
                <button class="btn btn-gold mt-20" onclick="app.showSection('swipe')">
                    <i class="fas fa-search"></i> –ù–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
                </button>
            </div>
        `;
    }
    
    getMessagesContent() {
        return `
            <div class="glass-card">
                <div class="text-center mb-30">
                    <div class="card-icon">üí¨</div>
                    <div class="card-title">–°–æ–æ–±—â–µ–Ω–∏—è</div>
                    <div class="card-description">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏</div>
                </div>
                
                <div class="conversations-list">
                    <div class="conversation-item" onclick="app.openConversation(1)">
                        <div style="display: flex; align-items: center; gap: 15px; padding: 15px; background: rgba(255,255,255,0.05); border-radius: 10px; margin-bottom: 10px; cursor: pointer; transition: all 0.3s ease;" 
                             onmouseover="this.style.background='rgba(255,255,255,0.1)'" 
                             onmouseout="this.style.background='rgba(255,255,255,0.05)'">
                            <div style="background: linear-gradient(45deg, #ffd700, #f59e0b); width: 50px; height: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">
                                üè¢
                            </div>
                            <div style="flex: 1;">
                                <div style="color: white; font-weight: bold; margin-bottom: 5px;">–û–û–û "–¢–µ—Ö–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏"</div>
                                <div style="color: rgba(255,255,255,0.7); font-size: 0.9rem;">–ü—Ä–∏–≤–µ—Ç! –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏...</div>
                            </div>
                            <div style="text-align: right;">
                                <div style="background: #10b981; color: white; width: 20px; height: 20px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 0.8rem; margin-bottom: 5px;">1</div>
                                <div style="color: rgba(255,255,255,0.5); font-size: 0.8rem;">2 –º–∏–Ω</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="conversation-item" onclick="app.openConversation(2)">
                        <div style="display: flex; align-items: center; gap: 15px; padding: 15px; background: rgba(255,255,255,0.05); border-radius: 10px; margin-bottom: 10px; cursor: pointer; transition: all 0.3s ease;" 
                             onmouseover="this.style.background='rgba(255,255,255,0.1)'" 
                             onmouseout="this.style.background='rgba(255,255,255,0.05)'">
                            <div style="background: linear-gradient(45deg, #3b82f6, #1e40af); width: 50px; height: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">
                                üë§
                            </div>
                            <div style="flex: 1;">
                                <div style="color: white; font-weight: bold; margin-bottom: 5px;">–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤</div>
                                <div style="color: rgba(255,255,255,0.7); font-size: 0.9rem;">–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –ú–æ–∂–µ–º –æ–±—Å—É–¥–∏—Ç—å...</div>
                            </div>
                            <div style="text-align: right;">
                                <div style="color: rgba(255,255,255,0.5); font-size: 0.8rem;">1—á –Ω–∞–∑–∞–¥</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="text-center mt-20">
                    <button class="btn btn-gold" onclick="app.showSection('swipe')">
                        <i class="fas fa-envelope-open"></i> –ù–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    </button>
                </div>
            </div>
        `;
    }
    
    getProfileContent() {
        return `
            <div class="glass-card">
                <div class="card-icon">üë§</div>
                <div class="card-title">–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏</div>
                <div class="card-description">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏</div>
                
                <!-- –ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ -->
                <div class="profile-info-card" style="margin-top: 30px; text-align: left;">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px;">
                        <div class="info-group">
                            <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                            <div class="info-value" id="companyName">–û–û–û "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"</div>
                        </div>
                        <div class="info-group">
                            <label>–û—Ç—Ä–∞—Å–ª—å</label>
                            <div class="info-value" id="industry">IT –∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è</div>
                        </div>
                        <div class="info-group">
                            <label>–°—Ç—Ä–∞–Ω–∞/–†–µ–≥–∏–æ–Ω</label>
                            <div class="info-value" id="country">–†–æ—Å—Å–∏—è, –ú–æ—Å–∫–≤–∞</div>
                        </div>
                        <div class="info-group">
                            <label>–°–∞–π—Ç</label>
                            <div class="info-value" id="website">https://innovation-solutions.ru</div>
                        </div>
                        <div class="info-group">
                            <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</label>
                            <div class="info-value" id="employees">50-100 —á–µ–ª–æ–≤–µ–∫</div>
                        </div>
                        <div class="info-group">
                            <label>–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è</label>
                            <div class="info-value" id="founded">2018</div>
                        </div>
                    </div>
                    
                    <div class="info-group" style="margin-bottom: 20px;">
                        <label>–û–ø–∏—Å–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</label>
                        <div class="info-value" id="description">–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –≤–Ω–µ–¥—Ä—è–µ–º –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ IT-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ CRM-—Å–∏—Å—Ç–µ–º–∞—Ö, –æ–±–ª–∞—á–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.</div>
                    </div>
                    
                    <div class="info-group">
                        <label>–ö–æ–º–∏—Å—Å–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞</label>
                        <div class="info-value" id="commission">5-15% –æ—Ç —Å–¥–µ–ª–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–º–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</div>
                    </div>
                </div>
                
                <div style="text-align: center; margin-top: 30px;">
                    <button class="btn btn-gold" onclick="app.editProfile()">
                        <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                    </button>
                    <button class="btn btn-glass" onclick="app.uploadPhoto()">
                        <i class="fas fa-camera"></i> –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ
                    </button>
                    <button class="btn btn-glass" onclick="app.viewDocuments()">
                        <i class="fas fa-file-alt"></i> –î–æ–∫—É–º–µ–Ω—Ç—ã
                    </button>
                </div>
            </div>
        `;
    }
    
    getAIAssistantContent() {
        return `
            <div class="glass-card text-center">
                <div class="card-icon">ü§ñ</div>
                <div class="card-title">AI-–ü–æ–º–æ—â–Ω–∏–∫</div>
                <div class="card-description">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞</div>
                <div style="margin-top: 30px;">
                    <button class="btn btn-gold" onclick="app.showNotification('AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...', 'info')">
                        <i class="fas fa-brain"></i> –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
                    </button>
                    <button class="btn btn-glass" onclick="app.showNotification('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤...', 'info')">
                        <i class="fas fa-comment-dots"></i> –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
                    </button>
                </div>
            </div>
        `;
    }
    
    getAnalyticsContent() {
        return `
            <div class="glass-card text-center">
                <div class="card-icon">üìä</div>
                <div class="card-title">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
                <div class="card-description">–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                
                <div id="analytics-loading" class="mt-30">
                    <div class="loading-shimmer" style="height: 100px; border-radius: 10px; margin-bottom: 20px;"></div>
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
                </div>
                
                <div id="analytics-content" class="mt-30" style="display: none;">
                    <div class="cards-grid" id="analytics-metrics"></div>
                    
                    <div class="mt-30">
                        <button class="btn btn-gold" onclick="window.open('/admin/analytics', '_blank')">
                            <i class="fas fa-external-link-alt"></i>
                            –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                        </button>
                        <button class="btn btn-glass" onclick="window.open('/api/v1/analytics/admin/dashboard?admin=true', '_blank')">
                            <i class="fas fa-chart-line"></i>
                            –ü—Ä–æ—Å—Ç–∞—è –ø–∞–Ω–µ–ª—å
                        </button>
                        <button class="btn btn-glass" onclick="app.loadAnalytics()">
                            <i class="fas fa-sync-alt"></i>
                            –û–±–Ω–æ–≤–∏—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        `;
    }
    
    setupSectionHandlers(sectionName) {
        if (sectionName === 'swipe') {
            this.setupSwipeHandlers();
        } else if (sectionName === 'analytics') {
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            setTimeout(() => this.loadAnalytics(), 500);
        }
    }
    
    async loadAnalytics() {
        try {
            const loadingEl = document.getElementById('analytics-loading');
            const contentEl = document.getElementById('analytics-content');
            const metricsEl = document.getElementById('analytics-metrics');
            
            if (loadingEl) loadingEl.style.display = 'block';
            if (contentEl) contentEl.style.display = 'none';
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Å —Å–µ—Ä–≤–µ—Ä–∞
            const response = await fetch('/api/v1/analytics/admin/metrics?admin=true');
            
            if (response.ok) {
                const data = await response.json();
                
                if (metricsEl) {
                    metricsEl.innerHTML = `
                        <div class="card glass-card">
                            <div class="card-title">${data.data.new_users_today}</div>
                            <div class="card-description">–ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è</div>
                        </div>
                        <div class="card glass-card">
                            <div class="card-title">${data.data.active_users_today}</div>
                            <div class="card-description">–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è</div>
                        </div>
                        <div class="card glass-card">
                            <div class="card-title">${data.data.matches_today}</div>
                            <div class="card-description">–ú–∞—Ç—á–µ–π —Å–µ–≥–æ–¥–Ω—è</div>
                        </div>
                        <div class="card glass-card">
                            <div class="card-title">${data.data.paid_users_total}</div>
                            <div class="card-description">–ü–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏</div>
                        </div>
                        <div class="card glass-card">
                            <div class="card-title">${data.data.messages_today}</div>
                            <div class="card-description">–°–æ–æ–±—â–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è</div>
                        </div>
                        <div class="card glass-card">
                            <div class="card-title">${data.data.total_users}</div>
                            <div class="card-description">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                        </div>
                    `;
                }
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
                this.trackEvent('profile_view', {
                    section: 'analytics_data',
                    metrics_loaded: true,
                    timestamp: new Date().toISOString()
                });
                
            } else {
                if (metricsEl) {
                    metricsEl.innerHTML = `
                        <div class="card glass-card text-center">
                            <div class="card-description">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>
                        </div>
                    `;
                }
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
        } finally {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
            const loadingEl = document.getElementById('analytics-loading');
            const contentEl = document.getElementById('analytics-content');
            
            if (loadingEl) loadingEl.style.display = 'none';
            if (contentEl) contentEl.style.display = 'block';
        }
    }
    
    setupSwipeHandlers() {
        document.addEventListener('keydown', (e) => {
            if (this.currentSection !== 'swipe') return;
            
            switch (e.key) {
                case 'ArrowLeft':
                    this.swipeAction('reject');
                    break;
                case 'ArrowRight':
                    this.swipeAction('like');
                    break;
            }
        });
    }
    
    swipeAction(action) {
        const profile = this.profiles[this.currentProfileIndex];
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ª–∞–π–∫–∞ –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞
        this.trackEvent(action === 'like' ? 'like' : 'profile_view', {
            target_profile_id: profile.id,
            target_profile_name: profile.name,
            target_profile_type: profile.type.split(' ‚Ä¢ ')[0],
            action: action,
            timestamp: new Date().toISOString()
        });
        
        switch (action) {
            case 'like':
                this.showNotification('üíñ –õ–∞–π–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!', 'success');
                
                // –°–∏–º—É–ª–∏—Ä—É–µ–º –º–∞—Ç—á —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 30%
                if (Math.random() < 0.3) {
                    setTimeout(() => {
                        this.trackEvent('match', {
                            partner_profile_id: profile.id,
                            partner_profile_name: profile.name,
                            timestamp: new Date().toISOString()
                        });
                        this.showNotification('üéâ –ú–∞—Ç—á! –í–∑–∞–∏–º–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å!', 'success');
                    }, 1500);
                }
                break;
            case 'reject':
                this.showNotification('üëã –ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ–ø—É—â–µ–Ω', 'info');
                break;
        }
        
        setTimeout(() => {
            this.nextProfile();
        }, 1000);
    }
    
    sendMessage(profileId, profileName) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        this.trackEvent('message', {
            target_profile_id: profileId,
            target_profile_name: profileName,
            message_type: 'direct',
            timestamp: new Date().toISOString()
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        this.showMessageModal(profileId, profileName);
    }
    
    showMessageModal(profileId, profileName) {
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(30, 58, 138, 0.9);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            animation: fadeIn 0.3s ease;
        `;
        
        modal.innerHTML = `
            <div style="
                background: var(--glass-background);
                backdrop-filter: var(--glass-backdrop);
                border: 1px solid var(--glass-border);
                border-radius: var(--border-radius-medium);
                padding: 30px;
                max-width: 500px;
                width: 90%;
                box-shadow: var(--shadow-neumorphic);
                animation: slideInUp 0.4s ease;
            ">
                <div style="text-align: center; margin-bottom: 25px;">
                    <div style="font-size: 2rem; margin-bottom: 10px;">üí¨</div>
                    <h3 style="color: white; margin-bottom: 5px;">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</h3>
                    <p style="color: rgba(255,255,255,0.7); font-size: 0.9rem;">${profileName}</p>
                </div>
                
                <div style="margin-bottom: 20px;">
                    <textarea 
                        id="messageText" 
                        placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                        style="
                            width: 100%;
                            height: 120px;
                            background: rgba(255,255,255,0.1);
                            border: 1px solid rgba(255,255,255,0.2);
                            border-radius: 10px;
                            padding: 15px;
                            color: white;
                            font-size: 1rem;
                            resize: vertical;
                            font-family: inherit;
                        "
                    ></textarea>
                </div>
                
                <div style="margin-bottom: 20px;">
                    <div style="color: rgba(255,255,255,0.7); font-size: 0.9rem; margin-bottom: 10px;">–ë—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã:</div>
                    <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                        <button class="btn-template" onclick="document.getElementById('messageText').value = '–ü—Ä–∏–≤–µ—Ç! –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞.'">–û —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ</button>
                        <button class="btn-template" onclick="document.getElementById('messageText').value = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–æ–≥–ª–∏ –±—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞?'">–û –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–µ</button>
                        <button class="btn-template" onclick="document.getElementById('messageText').value = '–ü—Ä–∏–≤–µ—Ç! –ú–æ–∂–µ–º –æ–±–º–µ–Ω—è—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.'">–û–±–º–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏</button>
                    </div>
                </div>
                
                <div style="display: flex; gap: 15px; justify-content: center;">
                    <button class="btn btn-glass" onclick="app.closeMessageModal()">
                        <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button class="btn btn-gold" onclick="app.sendMessageSubmit(${profileId}, '${profileName}')">
                        <i class="fas fa-paper-plane"></i> –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                    </button>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
        const style = document.createElement('style');
        style.textContent = `
            .btn-template {
                background: rgba(255, 215, 0, 0.2);
                border: 1px solid rgba(255, 215, 0, 0.3);
                color: white;
                padding: 8px 12px;
                border-radius: 15px;
                font-size: 0.8rem;
                cursor: pointer;
                transition: all 0.3s ease;
                white-space: nowrap;
            }
            .btn-template:hover {
                background: rgba(255, 215, 0, 0.3);
                transform: translateY(-2px);
            }
            @keyframes fadeIn {
                from { opacity: 0; }
                to { opacity: 1; }
            }
            @keyframes fadeOut {
                from { opacity: 1; }
                to { opacity: 0; }
            }
            @keyframes slideInUp {
                from { transform: translateY(30px); opacity: 0; }
                to { transform: translateY(0); opacity: 1; }
            }
        `;
        
        document.head.appendChild(style);
        document.body.appendChild(modal);
        
        // –§–æ–∫—É—Å –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –ø–æ–ª–µ
        setTimeout(() => {
            document.getElementById('messageText').focus();
        }, 400);
        
        // –ó–∞–∫—Ä—ã–≤–∞—Ç—å –ø–æ ESC
        const handleEsc = (e) => {
            if (e.key === 'Escape') {
                this.closeMessageModal();
                document.removeEventListener('keydown', handleEsc);
            }
        };
        document.addEventListener('keydown', handleEsc);
        
        this.currentModal = modal;
        this.currentStyle = style;
    }
    
    closeMessageModal() {
        if (this.currentModal) {
            this.currentModal.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => {
                if (this.currentModal && this.currentModal.parentNode) {
                    this.currentModal.parentNode.removeChild(this.currentModal);
                }
                if (this.currentStyle && this.currentStyle.parentNode) {
                    this.currentStyle.parentNode.removeChild(this.currentStyle);
                }
                this.currentModal = null;
                this.currentStyle = null;
            }, 300);
        }
    }
    
    sendMessageSubmit(profileId, profileName) {
        const messageText = document.getElementById('messageText')?.value?.trim();
        
        if (!messageText) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'warning');
            return;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        this.trackEvent('message', {
            target_profile_id: profileId,
            target_profile_name: profileName,
            message_length: messageText.length,
            timestamp: new Date().toISOString()
        });
        
        this.closeMessageModal();
        this.showNotification(`üì¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ–º–ø–∞–Ω–∏–∏ "${profileName}"!`, 'success');
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 40%
        if (Math.random() < 0.4) {
            setTimeout(() => {
                this.showNotification(`üì® –ù–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç "${profileName}"!`, 'info');
            }, 3000 + Math.random() * 5000); // 3-8 —Å–µ–∫—É–Ω–¥
        }
    }
    
    openConversation(conversationId) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
        this.trackEvent('profile_view', {
            section: 'conversation',
            conversation_id: conversationId,
            timestamp: new Date().toISOString()
        });
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–µ
        const conversations = {
            1: {
                name: '–û–û–û "–¢–µ—Ö–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏"',
                avatar: 'üè¢',
                online: true,
                messages: [
                    { sender: 'them', text: '–ü—Ä–∏–≤–µ—Ç! –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞.', time: '14:25' },
                    { sender: 'me', text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–æ–Ω–µ—á–Ω–æ, —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ–±—Å—É–¥–∏–º. –ö–∞–∫–∏–µ —É –≤–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è?', time: '14:27' },
                    { sender: 'them', text: '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å IT-—Ä–µ—à–µ–Ω–∏—è–º–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞. –ù—É–∂–Ω—ã –ø–∞—Ä—Ç–Ω–µ—Ä—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂ –≤ —Ä–µ–≥–∏–æ–Ω–∞—Ö.', time: '14:30' }
                ]
            },
            2: {
                name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
                avatar: 'üë§',
                online: false,
                messages: [
                    { sender: 'me', text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–æ–≥–ª–∏ –±—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞?', time: '13:15' },
                    { sender: 'them', text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –ú–æ–∂–µ–º –æ–±—Å—É–¥–∏—Ç—å. –Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏.', time: '13:45' }
                ]
            }
        };
        
        const conversation = conversations[conversationId];
        if (!conversation) {
            this.showNotification('–î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }
        
        this.showConversationModal(conversation, conversationId);
    }
    
    showConversationModal(conversation, conversationId) {
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(30, 58, 138, 0.95);
            backdrop-filter: blur(15px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            animation: fadeIn 0.3s ease;
        `;
        
        const messagesHtml = conversation.messages.map(msg => `
            <div style="
                display: flex;
                justify-content: ${msg.sender === 'me' ? 'flex-end' : 'flex-start'};
                margin-bottom: 15px;
            ">
                <div style="
                    max-width: 70%;
                    padding: 12px 16px;
                    border-radius: 18px;
                    background: ${msg.sender === 'me' ? 'linear-gradient(145deg, #ffd700, #f59e0b)' : 'rgba(255,255,255,0.1)'};
                    color: ${msg.sender === 'me' ? '#1e3a8a' : 'white'};
                    font-weight: ${msg.sender === 'me' ? '500' : 'normal'};
                ">
                    <div>${msg.text}</div>
                    <div style="
                        font-size: 0.8rem;
                        opacity: 0.7;
                        margin-top: 5px;
                        text-align: right;
                    ">${msg.time}</div>
                </div>
            </div>
        `).join('');
        
        modal.innerHTML = `
            <div style="
                background: var(--glass-background);
                backdrop-filter: var(--glass-backdrop);
                border: 1px solid var(--glass-border);
                border-radius: var(--border-radius-medium);
                width: 90%;
                max-width: 600px;
                height: 80%;
                max-height: 700px;
                display: flex;
                flex-direction: column;
                box-shadow: var(--shadow-neumorphic);
                animation: slideInUp 0.4s ease;
            ">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ -->
                <div style="
                    padding: 20px;
                    border-bottom: 1px solid rgba(255,255,255,0.1);
                    display: flex;
                    align-items: center;
                    gap: 15px;
                ">
                    <div style="
                        background: linear-gradient(45deg, #ffd700, #f59e0b);
                        width: 50px;
                        height: 50px;
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        font-size: 1.5rem;
                    ">
                        ${conversation.avatar}
                    </div>
                    <div style="flex: 1;">
                        <h3 style="color: white; margin-bottom: 5px;">${conversation.name}</h3>
                        <div style="color: rgba(255,255,255,0.7); font-size: 0.9rem;">
                            ${conversation.online ? 'üü¢ –û–Ω–ª–∞–π–Ω' : 'üî¥ –û—Ñ–ª–∞–π–Ω'}
                        </div>
                    </div>
                    <button onclick="app.closeConversationModal()" style="
                        background: rgba(255,255,255,0.1);
                        border: none;
                        width: 40px;
                        height: 40px;
                        border-radius: 50%;
                        color: white;
                        cursor: pointer;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        transition: all 0.3s ease;
                    " onmouseover="this.style.background='rgba(255,255,255,0.2)'" 
                       onmouseout="this.style.background='rgba(255,255,255,0.1)'">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                
                <!-- –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π -->
                <div style="
                    flex: 1;
                    padding: 20px;
                    overflow-y: auto;
                    display: flex;
                    flex-direction: column;
                ">
                    ${messagesHtml}
                </div>
                
                <!-- –ü–æ–ª–µ –≤–≤–æ–¥–∞ -->
                <div style="
                    padding: 20px;
                    border-top: 1px solid rgba(255,255,255,0.1);
                    display: flex;
                    gap: 15px;
                    align-items: flex-end;
                ">
                    <textarea 
                        id="chatMessageInput"
                        placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                        style="
                            flex: 1;
                            background: rgba(255,255,255,0.1);
                            border: 1px solid rgba(255,255,255,0.2);
                            border-radius: 20px;
                            padding: 12px 16px;
                            color: white;
                            font-size: 1rem;
                            resize: none;
                            height: 45px;
                            max-height: 120px;
                            font-family: inherit;
                        "
                        onkeydown="if(event.key==='Enter' && !event.shiftKey) { event.preventDefault(); app.sendChatMessage(${conversationId}); }"
                    ></textarea>
                    <button onclick="app.sendChatMessage(${conversationId})" style="
                        background: linear-gradient(145deg, #ffd700, #f59e0b);
                        border: none;
                        width: 45px;
                        height: 45px;
                        border-radius: 50%;
                        color: #1e3a8a;
                        cursor: pointer;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        transition: all 0.3s ease;
                        font-size: 1.1rem;
                    " onmouseover="this.style.transform='scale(1.05)'" 
                       onmouseout="this.style.transform='scale(1)'">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        setTimeout(() => {
            const input = document.getElementById('chatMessageInput');
            if (input) input.focus();
        }, 400);
        
        this.currentConversationModal = modal;
        this.currentConversationId = conversationId;
    }
    
    closeConversationModal() {
        if (this.currentConversationModal) {
            this.currentConversationModal.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => {
                if (this.currentConversationModal.parentNode) {
                    this.currentConversationModal.parentNode.removeChild(this.currentConversationModal);
                }
            }, 300);
        }
    }
    
    sendChatMessage(conversationId) {
        const input = document.getElementById('chatMessageInput');
        const messageText = input.value.trim();
        
        if (!messageText) return;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
        this.trackEvent('message', {
            conversation_id: conversationId,
            message_length: messageText.length,
            timestamp: new Date().toISOString()
        });
        
        // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
        input.value = '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification('üì¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success');
    }
    
    nextProfile() {
        this.currentProfileIndex = (this.currentProfileIndex + 1) % this.profiles.length;
        this.showSection('swipe');
    }
    
    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.innerHTML = `
            <div style="
                position: fixed;
                top: 30px;
                right: 30px;
                background: var(--glass-background);
                backdrop-filter: var(--glass-backdrop);
                border: 1px solid var(--glass-border);
                color: white;
                padding: 15px 20px;
                border-radius: var(--border-radius-small);
                box-shadow: var(--shadow-neumorphic);
                z-index: 9999;
                transform: translateX(400px);
                transition: all 0.3s ease;
            ">${message}</div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.firstElementChild.style.transform = 'translateX(0)';
        }, 100);
        
        setTimeout(() => {
            notification.firstElementChild.style.transform = 'translateX(400px)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }
    
    // === –ü–†–û–§–ò–õ–¨ –§–£–ù–ö–¶–ò–ò ===
    
    editProfile() {
        this.showProfileEditModal();
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
        this.trackEvent('profile_view', {
            section: 'edit_profile',
            timestamp: new Date().toISOString()
        });
    }
    
    showProfileEditModal() {
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(30, 58, 138, 0.95);
            backdrop-filter: blur(15px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            animation: fadeIn 0.3s ease;
        `;
        
        modal.innerHTML = `
            <div style="
                background: var(--glass-background);
                backdrop-filter: var(--glass-backdrop);
                border: 1px solid var(--glass-border);
                border-radius: var(--border-radius-medium);
                width: 90%;
                max-width: 600px;
                max-height: 80vh;
                overflow-y: auto;
                padding: 30px;
                box-shadow: var(--shadow-neumorphic);
                animation: slideInUp 0.4s ease;
            ">
                <h2 style="color: white; margin-bottom: 25px; display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-edit"></i>
                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
                </h2>
                
                <form id="profileEditForm" style="color: white;">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 20px;">
                        <div class="form-group">
                            <label for="editCompanyName">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                            <input type="text" id="editCompanyName" value="–û–û–û '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è'" class="profile-input">
                        </div>
                        <div class="form-group">
                            <label for="editIndustry">–û—Ç—Ä–∞—Å–ª—å</label>
                            <input type="text" id="editIndustry" value="IT –∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è" class="profile-input">
                        </div>
                        <div class="form-group">
                            <label for="editCountry">–°—Ç—Ä–∞–Ω–∞/–†–µ–≥–∏–æ–Ω</label>
                            <input type="text" id="editCountry" value="–†–æ—Å—Å–∏—è, –ú–æ—Å–∫–≤–∞" class="profile-input">
                        </div>
                        <div class="form-group">
                            <label for="editWebsite">–í–µ–±-—Å–∞–π—Ç</label>
                            <input type="url" id="editWebsite" value="https://innovation-solutions.ru" class="profile-input">
                        </div>
                        <div class="form-group">
                            <label for="editEmployees">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</label>
                            <select id="editEmployees" class="profile-input">
                                <option value="1-10">1-10 —á–µ–ª–æ–≤–µ–∫</option>
                                <option value="11-50">11-50 —á–µ–ª–æ–≤–µ–∫</option>
                                <option value="50-100" selected>50-100 —á–µ–ª–æ–≤–µ–∫</option>
                                <option value="100-500">100-500 —á–µ–ª–æ–≤–µ–∫</option>
                                <option value="500+">500+ —á–µ–ª–æ–≤–µ–∫</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="editFounded">–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è</label>
                            <input type="number" id="editFounded" value="2018" min="1900" max="2025" class="profile-input">
                        </div>
                    </div>
                    
                    <div class="form-group" style="margin-bottom: 20px;">
                        <label for="editDescription">–û–ø–∏—Å–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</label>
                        <textarea id="editDescription" rows="4" class="profile-input">–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –≤–Ω–µ–¥—Ä—è–µ–º –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ IT-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ CRM-—Å–∏—Å—Ç–µ–º–∞—Ö, –æ–±–ª–∞—á–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.</textarea>
                    </div>
                    
                    <div class="form-group" style="margin-bottom: 30px;">
                        <label for="editCommission">–ö–æ–º–∏—Å—Å–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞</label>
                        <textarea id="editCommission" rows="2" class="profile-input">5-15% –æ—Ç —Å–¥–µ–ª–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–º–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</textarea>
                    </div>
                    
                    <div style="display: flex; gap: 15px; justify-content: center;">
                        <button type="button" class="btn btn-glass" onclick="app.closeProfileEditModal()">
                            <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="button" class="btn btn-gold" onclick="app.saveProfile()">
                            <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                        </button>
                    </div>
                </form>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Ñ–æ—Ä–º—ã
        const style = document.createElement('style');
        style.textContent = `
            .form-group {
                margin-bottom: 15px;
            }
            .form-group label {
                display: block;
                margin-bottom: 5px;
                color: rgba(255, 255, 255, 0.9);
                font-weight: 500;
                font-size: 0.9rem;
            }
            .profile-input {
                width: 100%;
                padding: 12px 15px;
                background: rgba(255, 255, 255, 0.1);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 10px;
                color: white;
                font-size: 1rem;
                font-family: inherit;
                transition: all 0.3s ease;
            }
            .profile-input:focus {
                outline: none;
                border-color: var(--gold);
                background: rgba(255, 255, 255, 0.15);
                box-shadow: 0 0 0 2px rgba(255, 215, 0, 0.2);
            }
            .profile-input::placeholder {
                color: rgba(255, 255, 255, 0.5);
            }
        `;
        
        document.head.appendChild(style);
        document.body.appendChild(modal);
        
        this.currentProfileModal = modal;
        this.currentProfileStyle = style;
    }
    
    closeProfileEditModal() {
        if (this.currentProfileModal) {
            this.currentProfileModal.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => {
                if (this.currentProfileModal && this.currentProfileModal.parentNode) {
                    this.currentProfileModal.parentNode.removeChild(this.currentProfileModal);
                }
                if (this.currentProfileStyle && this.currentProfileStyle.parentNode) {
                    this.currentProfileStyle.parentNode.removeChild(this.currentProfileStyle);
                }
                this.currentProfileModal = null;
                this.currentProfileStyle = null;
            }, 300);
        }
    }
    
    async saveProfile() {
        try {
            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
            const formData = {
                companyName: document.getElementById('editCompanyName')?.value,
                industry: document.getElementById('editIndustry')?.value,
                country: document.getElementById('editCountry')?.value,
                website: document.getElementById('editWebsite')?.value,
                employees: document.getElementById('editEmployees')?.value,
                founded: document.getElementById('editFounded')?.value,
                description: document.getElementById('editDescription')?.value,
                commission: document.getElementById('editCommission')?.value
            };
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            this.trackEvent('profile_update', {
                fields_updated: Object.keys(formData),
                timestamp: new Date().toISOString()
            });
            
            // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            const response = await fetch('/api/v1/profiles/profile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });
            
            if (response.ok) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
                this.updateProfileDisplay(formData);
                this.closeProfileEditModal();
                this.showNotification('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success');
            } else {
                throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è', 'error');
        }
    }
    
    updateProfileDisplay(data) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ
        const elements = {
            'companyName': data.companyName,
            'industry': data.industry,
            'country': data.country,
            'website': data.website,
            'employees': data.employees,
            'founded': data.founded,
            'description': data.description,
            'commission': data.commission
        };
        
        Object.entries(elements).forEach(([id, value]) => {
            const element = document.getElementById(id);
            if (element && value) {
                element.textContent = value;
            }
        });
    }
    
    uploadPhoto() {
        // –°–æ–∑–¥–∞–µ–º input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.multiple = true;
        input.style.display = 'none';
        
        input.onchange = (event) => {
            const files = event.target.files;
            if (files.length > 0) {
                this.showNotification(`üì∏ –í—ã–±—Ä–∞–Ω–æ ${files.length} —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏`, 'info');
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
                this.trackEvent('photo_upload', {
                    files_count: files.length,
                    timestamp: new Date().toISOString()
                });
                
                // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
                setTimeout(() => {
                    this.showNotification('‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!', 'success');
                }, 2000);
            }
        };
        
        document.body.appendChild(input);
        input.click();
        document.body.removeChild(input);
    }
    
    viewDocuments() {
        this.showNotification('üìÅ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
        this.trackEvent('profile_view', {
            section: 'documents',
            timestamp: new Date().toISOString()
        });
    }
}

// Initialize app when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    window.app = new SalesMatchApp();
});