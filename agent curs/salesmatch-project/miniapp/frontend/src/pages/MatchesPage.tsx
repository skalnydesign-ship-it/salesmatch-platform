import React, { useState, useEffect } from 'react';
import { useContext7 } from '../contexts/Context7Provider';
import { AnimatedCard } from '../components/animations/AnimatedCard';
import { AnimatedText } from '../components/animations/AnimatedText';
import './MatchesPage.css';

const mockMatches = [
  { id: 1, name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤', title: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂', company: '–¢–µ—Ö–ö–æ—Ä–ø', image: 'üë®‚Äçüíº', matchScore: 95, lastMessage: '–ì–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ', timestamp: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
  { id: 2, name: '–°–æ—Ñ—å—è –ò–≤–∞–Ω–æ–≤–∞', title: '–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –±–∏–∑–Ω–µ—Å–∞', company: '–ò–Ω–Ω–æ–≤–µ–π—Ç–õ–∞–±', image: 'üë©‚Äçüíº', matchScore: 88, lastMessage: '–î–∞–≤–∞–π—Ç–µ –Ω–∞–∑–Ω–∞—á–∏–º –∑–≤–æ–Ω–æ–∫', timestamp: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥' },
  { id: 3, name: '–ú–∏—Ö–∞–∏–ª –ß—ç–Ω—å', title: '–í–∏—Ü–µ‚Äë–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º', company: '–î–∞—Ç–∞–§–ª–æ—É –°–∏—Å—Ç–µ–º—Å', image: 'üë®‚Äçüíª', matchScore: 90, lastMessage: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', timestamp: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
  { id: 4, name: '–û–ª—å–≥–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞', title: '–ê–∫–∫–∞—É–Ω—Ç‚Äë–º–µ–Ω–µ–¥–∂–µ—Ä', company: '–†–∏—Ç–µ–π–ª–ü—Ä–æ', image: 'üë©‚Äçüíº', matchScore: 82, lastMessage: '–ù–∞–ø—Ä–∞–≤–ª—é –ö–ü', timestamp: '–≤—á–µ—Ä–∞' },
  { id: 5, name: '–ò–ª—å—è –°–æ–∫–æ–ª–æ–≤', title: 'Head of Sales (EMEA)', company: 'CloudWare', image: 'üßë‚Äçüíº', matchScore: 87, lastMessage: '–ò—â—É –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–æ–≤', timestamp: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥' },
  { id: 6, name: '–ê–Ω–Ω–∞ –ú–æ—Ä–æ–∑–æ–≤–∞', title: 'BD Manager', company: 'HealthTech Group', image: 'üë©‚Äç‚öïÔ∏è', matchScore: 80, lastMessage: '–ì–æ—Ç–æ–≤—ã –∫ –ø–∏–ª–æ—Ç—É', timestamp: '—Å–µ–≥–æ–¥–Ω—è' },
  { id: 7, name: '–î–º–∏—Ç—Ä–∏–π –ï—Ñ–∏–º–æ–≤', title: 'Key Account Manager', company: 'FinSoft', image: 'üï¥Ô∏è', matchScore: 84, lastMessage: '–£—Ç–æ—á–Ω—é –¥–µ—Ç–∞–ª–∏', timestamp: '3 –¥–Ω—è –Ω–∞–∑–∞–¥' },
  { id: 8, name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –û—Ä–ª–æ–≤–∞', title: 'Partnerships Lead', company: 'EduNext', image: 'üë©‚Äçüè´', matchScore: 83, lastMessage: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã B2B –∫–ª–∏–µ–Ω—Ç—ã', timestamp: '1 —á–∞—Å –Ω–∞–∑–∞–¥' },
  { id: 9, name: '–†–æ–º–∞–Ω –ë–µ–ª—è–µ–≤', title: 'Sales Engineer', company: 'NetSecure', image: 'üë®‚Äçüîß', matchScore: 79, lastMessage: '–ì–æ—Ç–æ–≤ –∫ –¥–µ–º–æ', timestamp: '2 –¥–Ω—è –Ω–∞–∑–∞–¥' },
  { id: 10, name: '–ù–∞—Ç–∞–ª—å—è –§—Ä–æ–ª–æ–≤–∞', title: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä', company: 'AgroTech', image: 'üë©‚Äçüåæ', matchScore: 85, lastMessage: '–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏', timestamp: '—Ç–æ–ª—å–∫–æ —á—Ç–æ' }
];

export const MatchesPage: React.FC = () => {
  const [matches, setMatches] = useState(mockMatches);
  const { getBestPractices, checkSecurity } = useContext7();

  useEffect(() => {
    // Use Context7 to analyze matches
    const analyzeMatches = async () => {
      const practices = await getBestPractices();
      const security = await checkSecurity();
      console.log('Best practices for matches:', practices);
      console.log('Security analysis:', security);
    };
    
    analyzeMatches();
  }, [getBestPractices, checkSecurity]);

  return (
    <div className="matches-page">
      <div className="matches-page__header">
        <AnimatedText 
          text="ü§ù –í–∞—à–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è" 
          variant="slideUp"
          className="animated-text--gradient"
        />
        <AnimatedText 
          text="–õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ç–æ–∂–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å" 
          variant="fadeIn"
          delay={0.3}
        />
      </div>

      <div className="matches-page__list">
        {matches.map((match, index) => (
          <AnimatedCard
            key={match.id}
            className="matches-page__match"
            delay={index * 0.1}
            direction="up"
          >
            <div className="matches-page__avatar">
              {match.image}
            </div>
            <div className="matches-page__info">
              <AnimatedText 
                text={match.name}
                variant="slideUp"
                delay={index * 0.1 + 0.2}
              />
              <AnimatedText 
                text={match.title}
                variant="fadeIn"
                delay={index * 0.1 + 0.3}
                className="matches-page__title"
              />
              <AnimatedText 
                text={match.company}
                variant="fadeIn"
                delay={index * 0.1 + 0.4}
                className="matches-page__company"
              />
              <div className="matches-page__score">
                <AnimatedText 
                  text="–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ:"
                  variant="fadeIn"
                  delay={index * 0.1 + 0.5}
                  className="matches-page__score-label"
                />
                <AnimatedText 
                  text={`${match.matchScore}%`}
                  variant="scale"
                  delay={index * 0.1 + 0.6}
                  className="matches-page__score-value"
                />
              </div>
              <AnimatedText 
                text={match.lastMessage}
                variant="fadeIn"
                delay={index * 0.1 + 0.7}
                className="matches-page__message"
              />
              <AnimatedText 
                text={match.timestamp}
                variant="fadeIn"
                delay={index * 0.1 + 0.8}
                className="matches-page__timestamp"
              />
            </div>
            <button className="matches-page__chat" onClick={() => window.dispatchEvent(new CustomEvent('goToMessages'))}>
              ‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å
            </button>
          </AnimatedCard>
        ))}
      </div>

      {matches.length === 0 && (
        <div className="matches-page__empty">
          <h3>–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</h3>
          <p>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–≤–∞–π–ø–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ!</p>
        </div>
      )}
    </div>
  );
};