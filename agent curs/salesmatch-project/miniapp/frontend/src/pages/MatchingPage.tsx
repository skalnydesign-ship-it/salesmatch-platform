import React, { useState } from 'react';
import { useContext7 } from '../contexts/Context7Provider';
import { AnimatedCard } from '../components/animations/AnimatedCard';
import { AnimatedButton } from '../components/animations/AnimatedButton';
import { AnimatedText } from '../components/animations/AnimatedText';
import { LoadingSpinner } from '../components/animations/LoadingSpinner';
import './MatchingPage.css';

type AccountType = 'company' | 'agent';

const mockProfiles = [
  {
    id: 1,
    name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
    title: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂',
    company: '–¢–µ—Ö–ö–æ—Ä–ø',
    bio: '–ò—â—É B2B‚Äë–ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –≤ —Ñ–∏–Ω—Ç–µ—Ö–µ. 10+ –ª–µ—Ç –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö.',
    image: 'üë®‚Äçüíº',
    accountType: 'company' as AccountType
  },
  {
    id: 2,
    name: '–°–æ—Ñ—å—è –ò–≤–∞–Ω–æ–≤–∞',
    title: '–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –±–∏–∑–Ω–µ—Å–∞',
    company: '–ò–Ω–Ω–æ–≤–µ–π—Ç–õ–∞–±',
    bio: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: SaaS –∏ —Ü–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è. –û—Ç–∫—Ä—ã—Ç–∞ –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–º –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞–º.',
    image: 'üë©‚Äçüíº',
    accountType: 'company' as AccountType
  },
  {
    id: 3,
    name: '–ú–∏—Ö–∞–∏–ª –ß—ç–Ω—å',
    title: '–í–∏—Ü–µ‚Äë–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
    company: '–î–∞—Ç–∞–§–ª–æ—É –°–∏—Å—Ç–µ–º—Å',
    bio: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ AI/ML‚Äë—Ä–µ—à–µ–Ω–∏—è–º. –ò–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã.',
    image: 'üë®‚Äçüíª',
    accountType: 'company' as AccountType
  },
  {
    id: 4,
    name: '–û–ª—å–≥–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞',
    title: '–ê–∫–∫–∞—É–Ω—Ç‚Äë–º–µ–Ω–µ–¥–∂–µ—Ä',
    company: '–†–∏—Ç–µ–π–ª–ü—Ä–æ',
    bio: '–†–∞–∑–≤–∏–≤–∞—é —Å–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞ –≤ —Ä–∏—Ç–µ–π–ª–µ.',
    image: 'üë©‚Äçüíº',
    accountType: 'company' as AccountType
  },
  {
    id: 5,
    name: '–ò–ª—å—è –°–æ–∫–æ–ª–æ–≤',
    title: 'Head of Sales (EMEA)',
    company: 'CloudWare',
    bio: '–û–±–ª–∞–∫–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ. –ò—â—É —Ä–µ—Å–µ–ª–ª–µ—Ä–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–æ–≤.',
    image: 'üßë‚Äçüíº',
    accountType: 'company' as AccountType
  },
  {
    id: 6,
    name: '–ê–Ω–Ω–∞ –ú–æ—Ä–æ–∑–æ–≤–∞',
    title: 'BD Manager',
    company: 'HealthTech Group',
    bio: '–ú–µ–¥—Ç–µ—Ö –ø—Ä–æ–µ–∫—Ç—ã, –∫–ª–∏–Ω–∏–∫–∏, —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ. –û—Ç–∫—Ä—ã—Ç–∞ –ø–∏–ª–æ—Ç–∞–º –∏ POC.',
    image: 'üë©‚Äç‚öïÔ∏è',
    accountType: 'company' as AccountType
  },
  {
    id: 7,
    name: '–î–º–∏—Ç—Ä–∏–π –ï—Ñ–∏–º–æ–≤',
    title: 'Key Account Manager',
    company: 'FinSoft',
    bio: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–∞–Ω–∫–∞–º–∏, PCI DSS.',
    image: 'üï¥Ô∏è',
    accountType: 'company' as AccountType
  },
  {
    id: 8,
    name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –û—Ä–ª–æ–≤–∞',
    title: 'Partnerships Lead',
    company: 'EduNext',
    bio: 'EdTech, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã LXP/LMS.',
    image: 'üë©‚Äçüè´',
    accountType: 'company' as AccountType
  },
  {
    id: 9,
    name: '–†–æ–º–∞–Ω –ë–µ–ª—è–µ–≤',
    title: 'Sales Engineer',
    company: 'NetSecure',
    bio: '–ü—Ä–µ—Å–µ–π–ª, –¥–µ–º–æ, –ø–∏–ª–æ—Ç—ã. –†–µ—à–µ–Ω–∏—è –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.',
    image: 'üë®‚Äçüîß',
    accountType: 'company' as AccountType
  },
  {
    id: 10,
    name: '–ù–∞—Ç–∞–ª—å—è –§—Ä–æ–ª–æ–≤–∞',
    title: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
    company: 'AgroTech',
    bio: '–ê–≥—Ä–æ—Å–µ–∫—Ç–æ—Ä, IoT –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞. –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä—ã –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º.',
    image: 'üë©‚Äçüåæ',
    accountType: 'company' as AccountType
  },
  {
    id: 11,
    name: '–í–∏–∫—Ç–æ—Ä –°–µ—Ä–≥–µ–µ–≤',
    title: '–ê–≥–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º (B2B)',
    company: '–§—Ä–∏–ª–∞–Ω—Å',
    bio: '–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –ø–æ—Ä—Ç—Ñ–µ–ª—å IT‚Äë—Ä–µ—à–µ–Ω–∏–π. –ò—â—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞ –°–ù–ì.',
    image: 'üßë‚Äçüíº',
    accountType: 'agent' as AccountType
  },
  {
    id: 12,
    name: '–ú–∞—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–µ–µ–≤–∞',
    title: '–ê–≥–µ–Ω—Ç –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤',
    company: '–°–∞–º–æ–∑–∞–Ω—è—Ç–∞—è',
    bio: '–ù–∞—Ö–æ–∂—É –∏ –≤–µ–¥—É –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –¥–ª—è SaaS/–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞. –ö–æ–º–∏—Å—Å–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å.',
    image: 'üë©‚Äçüíº',
    accountType: 'agent' as AccountType
  },
  {
    id: 13,
    name: '–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –ì–æ—Ä–∏–Ω',
    title: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –∞–≥–µ–Ω—Ç',
    company: '–ò–ü',
    bio: '–û–ø—Ç–æ–≤—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏, —Ç–µ–Ω–¥–µ—Ä—ã. –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã —Ç–µ—Ö. –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è –∏ —Ä–∏—Ç–µ–π–ª.',
    image: 'üï¥Ô∏è',
    accountType: 'agent' as AccountType
  },
  {
    id: 14,
    name: '–ò—Ä–∏–Ω–∞ –í–ª–∞—Å–æ–≤–∞',
    title: '–ê–≥–µ–Ω—Ç –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –∫–∞–Ω–∞–ª–æ–≤',
    company: '–§—Ä–∏–ª–∞–Ω—Å',
    bio: '–ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã –≤ —Ä–µ–≥–∏–æ–Ω–∞—Ö. KPI‚Äë–º–æ–¥–µ–ª—å, –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å.',
    image: 'üë©‚Äçüíº',
    accountType: 'agent' as AccountType
  },
  {
    id: 15,
    name: '–ê—Ä—Ç—É—Ä –ú–∞—Ä—Ç—ã–Ω–æ–≤',
    title: 'Sales Agent (Tech, Security)',
    company: '–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π',
    bio: '–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞. –ì–æ—Ç–æ–≤ –±—Ä–∞—Ç—å –ø—Ä–µ—Å–µ–π–ª –∏ –¥–∏–ª–æ–≤–µ–¥–µ–Ω–∏–µ.',
    image: 'üë®‚Äçüîß',
    accountType: 'agent' as AccountType
  }
];

export const MatchingPage: React.FC = () => {
  const [currentProfileIndex, setCurrentProfileIndex] = useState(0);
  const [likedProfiles, setLikedProfiles] = useState<number[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [filterType, setFilterType] = useState<'all' | AccountType>('all');
  const { getCodeSuggestions, analyzeCode } = useContext7();

  const filteredProfiles = filterType === 'all' 
    ? mockProfiles 
    : mockProfiles.filter(p => p.accountType === filterType);

  const currentProfile = filteredProfiles[currentProfileIndex];

  const handleLike = async () => {
    if (currentProfile) {
      setIsLoading(true);
      setLikedProfiles([...likedProfiles, currentProfile.id]);
      
      // Use Context7 to analyze the interaction
      await analyzeCode(`User liked profile: ${currentProfile.name}`);
      
      // Simulate loading delay for better UX
      setTimeout(() => {
        setIsLoading(false);
        // Move to next profile
        if (currentProfileIndex < filteredProfiles.length - 1) {
          setCurrentProfileIndex(currentProfileIndex + 1);
        } else {
          setCurrentProfileIndex(0);
        }
      }, 1000);
    }
  };

  const handlePass = () => {
    if (currentProfileIndex < filteredProfiles.length - 1) {
      setCurrentProfileIndex(currentProfileIndex + 1);
    } else {
      setCurrentProfileIndex(0);
    }
  };

  if (isLoading) {
    return (
      <div className="matching-page">
        <div className="matching-page__loading">
          <LoadingSpinner size="lg" color="primary" text="–ü–æ–¥–±–∏—Ä–∞–µ–º –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ..." />
        </div>
      </div>
    );
  }

  if (!currentProfile) {
    return (
      <div className="matching-page">
        <div className="matching-page__empty">
          <AnimatedText 
            text="üéâ –í—Å–µ –∞–Ω–∫–µ—Ç—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã!" 
            variant="scale"
            className="animated-text--gradient"
          />
          <AnimatedText 
            text="–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤–æ –≤–∫–ª–∞–¥–∫–µ –ú–∞—Ç—á–∏." 
            variant="fadeIn"
            delay={0.5}
          />
        </div>
      </div>
    );
  }

  return (
    <div className="matching-page">
      <div className="matching-page__filters">
        <label className="matching-page__filter-label">–ö–æ–≥–æ –∏—â–µ–º:</label>
        <select 
          className="matching-page__filter-select"
          value={filterType}
          onChange={(e) => { setFilterType(e.target.value as any); setCurrentProfileIndex(0); }}
        >
          <option value="all">–í—Å–µ</option>
          <option value="company">–ö–æ–º–ø–∞–Ω–∏–∏</option>
          <option value="agent">–ê–≥–µ–Ω—Ç—ã</option>
        </select>
      </div>
      <AnimatedCard 
        className="matching-page__card"
        delay={0.2}
        direction="up"
      >
        <div className="matching-page__image">
          {currentProfile.image}
        </div>
        <div className="matching-page__info">
          <AnimatedText 
            text={currentProfile.name}
            variant="slideUp"
            className="matching-page__name"
          />
          <AnimatedText 
            text={currentProfile.title}
            variant="slideUp"
            delay={0.1}
            className="matching-page__title"
          />
          <AnimatedText 
            text={currentProfile.company}
            variant="slideUp"
            delay={0.2}
            className="matching-page__company"
          />
          <AnimatedText 
            text={currentProfile.bio}
            variant="fadeIn"
            delay={0.3}
            className="matching-page__bio"
          />
        </div>
      </AnimatedCard>

      <div className="matching-page__actions">
        <AnimatedButton
          variant="danger"
          size="lg"
          onClick={handlePass}
          className="matching-page__pass"
        >
          ‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
        </AnimatedButton>
        <AnimatedButton
          variant="success"
          size="lg"
          onClick={handleLike}
          className="matching-page__like"
        >
          ü§ù –ù—Ä–∞–≤–∏—Ç—Å—è
        </AnimatedButton>
      </div>

      <div className="matching-page__stats">
        <AnimatedText 
          text={`–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å: ${likedProfiles.length}`}
          variant="fadeIn"
          delay={0.5}
        />
        <AnimatedText 
          text={`–û—Å—Ç–∞–ª–æ—Å—å: ${filteredProfiles.length - currentProfileIndex - 1}`}
          variant="fadeIn"
          delay={0.6}
        />
      </div>
    </div>
  );
};